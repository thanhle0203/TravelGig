package com.thanhle.service;

import java.util.List;
import java.util.Set;
import java.util.HashSet;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.thanhle.domain.Building;
import com.thanhle.domain.Room;
import com.thanhle.repository.BuildingRepository;
import com.thanhle.repository.RoomRepository;

@Service
public class IBuildingService implements BuildingService {
	
	@Autowired
	BuildingRepository buildingRepository;
	
	@Autowired
	RoomRepository roomRepository;

	public Building saveBuilding(Building building) {
		// Check if the building already exists in the database
		Building persistedBuilding = buildingRepository.findByBuName(building.getBuName());
		if (persistedBuilding == null) {
			// If the building doesn't exist, check and save its rooms to the database
			Set<Room> roomList = building.getRoomList();
			Set<Room> roomPersistList = new HashSet<>();
			for (Room room : roomList) {
				// Check if the room already exists in the database
				Room persistedRoom = roomRepository.findByRoomType(room.getRoomType());
				if (persistedRoom == null) {
					// If the room doesn't exist, save it to the database
					persistedRoom = roomRepository.save(room);
				} else {
					// If the room exists, update its room size in the database
					persistedRoom.setRoomSize(room.getRoomSize());
					persistedRoom = roomRepository.save(persistedRoom);
				}
				roomPersistList.add(persistedRoom);
			}
			building.setRoomList(roomPersistList);
			// Save the building to the database
			building = buildingRepository.save(building);
		} else {
			// If the building exists, check and update its rooms in the database
			Set<Room> roomList = building.getRoomList();
			Set<Room> roomPersistList = persistedBuilding.getRoomList();
			for (Room room : roomList) {
				// Check if the room already exists in the database
				Room persistedRoom = roomRepository.findByRoomType(room.getRoomType());
				if (persistedRoom == null) {
					// If the room doesn't exist, save it to the database
					persistedRoom = roomRepository.save(room);
				} else {
					// If the room exists, update its room size in the database
					persistedRoom.setRoomSize(room.getRoomSize());
					persistedRoom = roomRepository.save(persistedRoom);
				}
				roomPersistList.add(persistedRoom);
			}
			building.setRoomList(roomPersistList);
			// Update the building in the database
			building = buildingRepository.save(persistedBuilding);
		}
		return building;
	}

	public List<Building> getBuildingByRoomType(String roomType) {
		return buildingRepository.findByRoomList_RoomType(roomType);
	}

}
